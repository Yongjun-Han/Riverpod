 Provider 의 종류 

 각각 다른 타입을 반환해주고 사용목적이 다르다
 모든 Provider 는 글로벌하게 선언한다

 1.Provider
 - 가장 기본 베이스가 되는 Provider
 - 아무타입이나 반환 가능 
 - Service, 계산한 값등을 반환할때 사용
 - 반환값을 캐싱할때 유용하다 : 빌드 횟수 최소화 가능 
 - 여러 Provider의 값들을 묶어서 한번에 반환값을 만들어 낼 수 있다. : provider 안에 provider 를 넣을때 사용 

 2.StateProvider
 - ui 에서 직접적으로 데이터를 변경할 수 있도록 하고 싶을때 사용 
 - 단순한 형태의 데이터만 관리 int, double, string 등 
 - Map, List 등 복잡한 형태의 데이터는 잘 다루지 않는다 
 - 복잡한 로직이 필요한 경우 사용하지 않는다 : number ++ 같은 간단한 로직에만 한정적으로 사용 

 3.StateNotifierProvider
 - ui 에서 직접적으로 데이터를 변경할 수 있도록 하고 싶을때 사용 
 - 복잡한 형태의 데이터 관리 가능 (class의 method 를 이용한 상태관리)
 - StateNotifier를 상송한 클래스를 반환

 4.FutureProvider
 - Future 타입만 반환가능
 - api요청 결과를 반환할때 주로 사용 
 - 복잡한 로직 또는 사용자의 특정 행동 뒤에 future를 재실행 하는 기능이 없음 : 필요할 경우 StateNotifierProvider 사용 

 5.StreamProvider
 - Stream 타입만 반환가능
 - api요청 결과를 Stream 으로 반환할때 주로 사용 Socket

 6.ChangeNotifierProvider(사용안함-마이그레이션 용도)

 ref.read VS ref.watch

 -ref.watch
 :반환 값이 업데이트가 있을때 지속적으로 build 함수를 다시 실행해준다 
 :필수적으로 ui 관련 코드에만 사용한다 

 -ref.read
 : 실행되는 순간 단 한번만 provider 값을 가져온다 
 : onPressed 콜백처럼 특정 액션 뒤에 실행되는 함수 내부에서 사용 

